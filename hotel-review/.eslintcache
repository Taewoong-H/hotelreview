[{"C:\\Users\\TAEWOONG\\Project\\hotelreview\\hotel-review\\src\\Hotels\\index.js":"1","C:\\Users\\TAEWOONG\\Project\\hotelreview\\hotel-review\\src\\Hotels\\HotelsName.js":"2","C:\\Users\\TAEWOONG\\Project\\hotelreview\\hotel-review\\src\\Hotels\\HotelsSearch.js":"3","C:\\Users\\TAEWOONG\\Project\\hotelreview\\hotel-review\\src\\Result\\index.js":"4"},{"size":288,"mtime":1612336654501,"results":"5","hashOfConfig":"6"},{"size":4036,"mtime":1612341467915,"results":"7","hashOfConfig":"6"},{"size":1930,"mtime":1612854711916,"results":"8","hashOfConfig":"6"},{"size":1390,"mtime":1612713666741,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lga639",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\TAEWOONG\\Project\\hotelreview\\hotel-review\\src\\Hotels\\index.js",[],"C:\\Users\\TAEWOONG\\Project\\hotelreview\\hotel-review\\src\\Hotels\\HotelsName.js",["19","20"],"import React from 'react';\r\n\r\nexport default class HotelsName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      totalHotels: [],\r\n      selected: {\r\n        country: '',\r\n        location: '',\r\n        hotelName: '',\r\n      }\r\n    };\r\n  }\r\n\r\n  getHotelNameAPI() {\r\n    fetch('http://localhost:3001/api/hotel_name')\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.setState({\r\n          totalHotels: json,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleCountrySelect() {\r\n    const countrySelect = document.querySelector('#country-select');\r\n    const locationSelect = document.querySelector('#location-select');\r\n    const hotelsSelect = document.querySelector('#hotels-select');\r\n\r\n    countrySelect.addEventListener('change', (event) => {\r\n      this.setState({\r\n        selected: {\r\n          country: event.target.value,\r\n        }\r\n      });\r\n      // 호텔, 지역 선택값 초기화\r\n      locationSelect.options[0].selected = true;\r\n      hotelsSelect.options[0].selected = true;\r\n    });\r\n  }\r\n\r\n  handleLocationSelect() {\r\n    const locationSelect = document.querySelector('#location-select');\r\n    const hotelsSelect = document.querySelector('#hotels-select');\r\n\r\n    locationSelect.addEventListener('change', (event) => {\r\n      this.setState({\r\n        selected: {\r\n          ...this.state.selected, // setState를 그냥 하면 country가 초기화됨.. 그래서 그대로 가져가는걸 ...(전개연산자)로 덮어씌우고 설정한다.\r\n          location: event.target.value,\r\n        }\r\n      });\r\n      // 호텔 선택값 초기화\r\n      hotelsSelect.options[0].selected = true;\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getHotelNameAPI();\r\n    this.handleCountrySelect();\r\n    this.handleLocationSelect();\r\n  }\r\n\r\n  render() {\r\n    const { selected, totalHotels } = this.state; // 그대로 가져오면 안됨. {}으로 객체 자체를 가져와서 배열로 할당.\r\n\r\n    // country\r\n    const selectCountries = totalHotels.map((obj) => obj.country);\r\n    const uniqueSelectCountries = [...new Set(selectCountries)];\r\n    const mappingSelectCountries = uniqueSelectCountries.map((obj, key) => {\r\n      return <option value={obj} key={key}>{obj}</option>;\r\n    });\r\n\r\n    // location\r\n    const locationsEqualToCountry = totalHotels.filter((obj) => {\r\n      if (selected.country === obj.country) {\r\n        return obj.location\r\n      }\r\n    });\r\n    const selectLocations = locationsEqualToCountry.map((obj) => obj.location);\r\n    const uniqueSelectLocations = [...new Set(selectLocations)];\r\n    const mappingSelectLocations = uniqueSelectLocations.map((obj, key) => {\r\n      return <option value={obj} key={key}>{obj}</option>;\r\n    })\r\n\r\n    // hotel_name\r\n    const hotelNameEqualToLocation = totalHotels.filter((obj) => {\r\n      if (selected.location === obj.location) {\r\n        return obj.hotel_name\r\n      }\r\n    });\r\n    const selectHotelNames = hotelNameEqualToLocation.map((obj) => obj.hotel_name);\r\n    const mappingSelectHotelNames = selectHotelNames.map((name, key) => {\r\n      return <option value={name} key={key}>{name}</option>;\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <label>나라: </label>\r\n        <select id=\"country-select\" defaultValue=\"default\">\r\n          <option value=\"default\" disabled>\r\n            Choose a Country ...\r\n          </option>\r\n          {mappingSelectCountries}\r\n        </select>\r\n        <br></br>\r\n\r\n        <label>지역: </label>\r\n        <select id=\"location-select\" defaultValue=\"default\">\r\n          <option value=\"default\" disabled>\r\n            Choose a Location ...\r\n          </option>\r\n          {mappingSelectLocations}\r\n        </select>\r\n        <br></br>\r\n        \r\n        <label>호텔 이름: </label>\r\n        <select id=\"hotels-select\" defaultValue=\"default\">\r\n          <option value=\"default\" disabled>\r\n            Choose a Hotel ...\r\n          </option>\r\n          {mappingSelectHotelNames}\r\n        </select>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\TAEWOONG\\Project\\hotelreview\\hotel-review\\src\\Hotels\\HotelsSearch.js",[],"C:\\Users\\TAEWOONG\\Project\\hotelreview\\hotel-review\\src\\Result\\index.js",[],{"ruleId":"21","severity":1,"message":"22","line":76,"column":62,"nodeType":"23","messageId":"24","endLine":76,"endColumn":64},{"ruleId":"21","severity":1,"message":"22","line":88,"column":63,"nodeType":"23","messageId":"24","endLine":88,"endColumn":65},"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd"]